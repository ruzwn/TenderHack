// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TenderHack.Infrastructure.Database;

#nullable disable

namespace TenderHack.Infrastructure.Migrations
{
    [DbContext(typeof(TenderHackDbContext))]
    [Migration("20231021165303_AddErrorType")]
    partial class AddErrorType
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.12");

            modelBuilder.Entity("ErrorUser", b =>
                {
                    b.Property<Guid>("ClustersId")
                        .HasColumnType("TEXT");

                    b.Property<long>("UsersId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ClustersId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("ErrorUser");
                });

            modelBuilder.Entity("TenderHack.Domain.Models.Cluster", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("CentroidId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Recommendation")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Resolved")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Clusters");
                });

            modelBuilder.Entity("TenderHack.Domain.Models.Error", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<long?>("ClusterId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("ClusterIfCentroidId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Log")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MetaId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ClusterId");

                    b.HasIndex("ClusterIfCentroidId")
                        .IsUnique();

                    b.ToTable("Errors");
                });

            modelBuilder.Entity("TenderHack.Domain.Models.ErrorType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Log")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ErrorTypes");
                });

            modelBuilder.Entity("TenderHack.Domain.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ErrorUser", b =>
                {
                    b.HasOne("TenderHack.Domain.Models.Error", null)
                        .WithMany()
                        .HasForeignKey("ClustersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TenderHack.Domain.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TenderHack.Domain.Models.Error", b =>
                {
                    b.HasOne("TenderHack.Domain.Models.Cluster", "Cluster")
                        .WithMany("Errors")
                        .HasForeignKey("ClusterId");

                    b.HasOne("TenderHack.Domain.Models.Cluster", "ClusterIfCentroid")
                        .WithOne("Centroid")
                        .HasForeignKey("TenderHack.Domain.Models.Error", "ClusterIfCentroidId");

                    b.Navigation("Cluster");

                    b.Navigation("ClusterIfCentroid");
                });

            modelBuilder.Entity("TenderHack.Domain.Models.Cluster", b =>
                {
                    b.Navigation("Centroid");

                    b.Navigation("Errors");
                });
#pragma warning restore 612, 618
        }
    }
}
